if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_COMPILER_IS_GNUCXX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror")
    include(CheckCXXCompilerFlag)
    CHECK_CXX_COMPILER_FLAG("-std=c++14" COMPILER_SUPPORTS_CXX14)
    CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
    CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
    if(COMPILER_SUPPORTS_CXX14)
        message(STATUS "C++ Standard: C++14")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
    elseif(COMPILER_SUPPORTS_CXX11)
        message(STATUS "C++ Standard: C++11")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    elseif(COMPILER_SUPPORTS_CXX0X)
        message(STATUS "C++ Standard: C++0x")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
    else()
        message(WARNING "Compiler ${CMAKE_CXX_COMPILER} has no C++ 0x/11/14 support.")
    endif()
endif()


if(MSVC)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
  set(STRING_BENCHMARK_LIBS ${CELERO_INSTALL_PREFIX}/lib/celero.lib PowrProf.lib)
endif()

if (UNIX)
  set(STRING_BENCHMARK_LIBS ${CELERO_INSTALL_PREFIX}/lib/libcelero.lib)
endif()

include_directories(${CELERO_INSTALL_PREFIX}/include)
if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  add_definitions("-DHAS_BOOST")
endif()

file(GLOB headers *.hpp)
file(GLOB sources *.cpp)

message(STATUS "Configuring build target")
add_executable(string_benchmark ${headers} ${sources})
target_link_libraries(string_benchmark ${STRING_BENCHMARK_LIBS})
add_dependencies(string_benchmark celero)

message(STATUS "Configuring run target")
add_custom_target(run ALL $<TARGET_FILE:string_benchmark> DEPENDS string_benchmark)
